{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.p1), 1 /* TEXT */), _hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.p1++)\n  }, \"点击p1++\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAI;;;6DADJA,oBAAe,6BAATC,SAAE,kBACRC,UAAI,EACJF,oBAAqC;IAA5BG,OAAK,sCAAEF,SAAE;KAAI,QAAM","names":["_createElementVNode","$setup","_hoisted_1","onClick"],"sourceRoot":"","sources":["/Users/issuser/Desktop/vue-demo/src/components/vue3-007.vue"],"sourcesContent":["<template>\n    <h1>{{p1}}</h1>\n    <br>\n    <button @click=\"p1++\">点击p1++</button>\n</template>\n\n<script>\n\nimport { ref , watch} from 'vue'\n\nexport default({\n    setup() {\n        const p1 = ref(0)\n\n        // 监听ref数据变化\n        return {p1}\n    },\n})\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
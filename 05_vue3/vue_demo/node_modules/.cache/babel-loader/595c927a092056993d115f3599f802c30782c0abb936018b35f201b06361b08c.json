{"ast":null,"code":"// import HelloWorld from './components/vue3-001.vue'\n// import HelloWorld from './components/vue3-002.vue'\n// import HelloWorld from './components/vue3-003.vue'\n// import HelloWorld from './components/vue3-004.vue'\n// import HelloWorld from './components/vue3-005.vue'\n// import HelloWorld from './components/vue3-006.vue'\n// import HelloWorld from './components/vue3-007.vue'\n// import HelloWorld from './components/vue3-008.vue'\n// import HelloWorld from './components/vue3-009.vue'\n// import HelloWorld from './components/vue3-010.vue'\n// import HelloWorld from './components/vue3-011.vue'\nimport HelloWorld from './components/vue3-012.vue';\nimport { computed, ref, onErrorCaptured } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  },\n  setup() {\n    //#region \n    // const p1 = reactive({name: '马云', age: 50})\n    // provide('name', p1)   // 进入页面自动传值\n\n    // const val = ref() // ref节点，把ref节点绑定到子组件\n    // function btnEvent() {\n    //   val.value.receive(p1) // 给子组件传值\n    // }\n    //#endregion\n\n    // 从vuex数据仓库里面取数据\n    const store = useStore();\n    const res = computed(() => {\n      // console.log(store.state.name)\n      return store.state.name;\n    });\n    const v1 = ref(true);\n\n    // 所以要放在父组件方法中, 一般不用\n    onErrorCaptured(() => {\n      console.log('onErrorCaptured, 当捕获一个来自子孙组件的错误时被调用');\n    });\n    return {\n      res,\n      v1\n    };\n  }\n};","map":{"version":3,"mappings":"AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,UAAS,MAAO,2BAA0B;AAEjD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,eAAe,QAAO,KAAI;AAClD,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVN;EACF,CAAC;EACDO,KAAK,GAAG;IACN;IACA;IACA;;IAEA;IACA;IACA;IACA;IACJ;;IAGI;IACA,MAAMC,KAAI,GAAIJ,QAAQ,EAAC;IACvB,MAAMK,GAAE,GAAIR,QAAQ,CAAC,MAAI;MACrB;MACA,OAAOO,KAAK,CAACE,KAAK,CAACL,IAAG;IAC1B,CAAC;IAED,MAAMM,EAAC,GAAIT,GAAG,CAAC,IAAI;;IAEnB;IACAC,eAAe,CAAC,MAAI;MAChBS,OAAO,CAACC,GAAG,CAAC,qCAAqC;IACrD,CAAC;IAED,OAAO;MAACJ,GAAG;MAAEE;IAAE;EACjB;AACF","names":["HelloWorld","computed","ref","onErrorCaptured","useStore","name","components","setup","store","res","state","v1","console","log"],"sourceRoot":"","sources":["/Users/issuser/Desktop/vue-demo/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"back\">\n    这是父组件\n    <h2>姓名:{{res}}</h2>\n    <!-- vue3-010.vue用到 -->\n    <!-- <button @click=\"btnEvent\">点击传值给子组件</button> -->\n  </div>\n  <h2 @click=\"v1 = !v1\">点击显示隐藏子组件</h2>\n  <HelloWorld v-if=\"v1\"/>\n</template>\n\n<script>\n// import HelloWorld from './components/vue3-001.vue'\n// import HelloWorld from './components/vue3-002.vue'\n// import HelloWorld from './components/vue3-003.vue'\n// import HelloWorld from './components/vue3-004.vue'\n// import HelloWorld from './components/vue3-005.vue'\n// import HelloWorld from './components/vue3-006.vue'\n// import HelloWorld from './components/vue3-007.vue'\n// import HelloWorld from './components/vue3-008.vue'\n// import HelloWorld from './components/vue3-009.vue'\n// import HelloWorld from './components/vue3-010.vue'\n// import HelloWorld from './components/vue3-011.vue'\nimport HelloWorld from './components/vue3-012.vue'\n\nimport { computed, ref, onErrorCaptured} from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  },\n  setup() {\n    //#region \n    // const p1 = reactive({name: '马云', age: 50})\n    // provide('name', p1)   // 进入页面自动传值\n\n    // const val = ref() // ref节点，把ref节点绑定到子组件\n    // function btnEvent() {\n    //   val.value.receive(p1) // 给子组件传值\n    // }\n//#endregion\n\n\n    // 从vuex数据仓库里面取数据\n    const store = useStore()\n    const res = computed(()=>{\n        // console.log(store.state.name)\n        return store.state.name\n    })\n\n    const v1 = ref(true)\n\n    // 所以要放在父组件方法中, 一般不用\n    onErrorCaptured(()=>{\n        console.log('onErrorCaptured, 当捕获一个来自子孙组件的错误时被调用')\n    })\n\n    return {res, v1}\n  },\n}\n</script>\n\n<style>\n.back {\n  background-color: red;\n  padding: 20px 0;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
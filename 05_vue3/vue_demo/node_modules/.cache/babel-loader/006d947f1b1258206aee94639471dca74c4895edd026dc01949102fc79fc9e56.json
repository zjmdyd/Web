{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" ******toRefs取值***** \"), _createCommentVNode(\" <h1>姓名: {{res.name.value}}</h1>\\n    <h1>年龄: {{res.age.value}}</h1> \"), _createCommentVNode(\" <h1>姓名: {{rObj.name}}</h1>\\n    <h1>年龄: {{rObj.age}}</h1>\\n    <h1>a: {{rObj.a}}</h1>\\n    <h1>b: {{rObj.b}}</h1>\\n    <h1>c: {{rObj.c}}</h1> \"), _createTextVNode(\" ******扩展运算符和toRefs取值***** \"), _createElementVNode(\"h1\", null, \"姓名: \" + _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"年龄: \" + _toDisplayString(_ctx.age), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"a: \" + _toDisplayString(_ctx.a), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"b: \" + _toDisplayString(_ctx.b), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"c: \" + _toDisplayString(_ctx.c), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"d: \" + _toDisplayString(_ctx.d.e), 1 /* TEXT */), _hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.btnEvent && $setup.btnEvent(...args))\n  }, \"点击更新视图层某一个数据\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAkBIA,oBAAI;;;qGAhBJ,+FACkC,EAElCC,sKAI0B,gDAG1B,uBAAuB,YAAnB,MAAI,oBAAGC,SAAI,kBACfF,oBAAsB,YAAlB,MAAI,oBAAGE,QAAG,kBACdF,oBAAmB,YAAf,KAAG,oBAAGE,MAAC,kBACXF,oBAAmB,YAAf,KAAG,oBAAGE,MAAC,kBACXF,oBAAmB,YAAf,KAAG,oBAAGE,MAAC,kBACXF,oBAAqB,YAAjB,KAAG,oBAAGE,MAAC,CAACC,CAAC,kBACbC,UAAI,EACJJ,oBAA+C;IAAtCK,OAAK,yCAAEC,2CAAQ;KAAE,cAAY","names":["_createElementVNode","_createCommentVNode","_ctx","e","_hoisted_1","onClick","$setup"],"sourceRoot":"","sources":["/Users/issuser/Desktop/Project/Web/05_vue3/vue_demo/src/components/vue3-005.vue"],"sourcesContent":["<template>\n    ******toRefs取值*****\n    <!-- <h1>姓名: {{res.name.value}}</h1>\n    <h1>年龄: {{res.age.value}}</h1> -->\n\n    <!-- <h1>姓名: {{rObj.name}}</h1>\n    <h1>年龄: {{rObj.age}}</h1>\n    <h1>a: {{rObj.a}}</h1>\n    <h1>b: {{rObj.b}}</h1>\n    <h1>c: {{rObj.c}}</h1> -->\n\n    ******扩展运算符和toRefs取值*****\n    <h1>姓名: {{ name }}</h1>\n    <h1>年龄: {{ age }}</h1>\n    <h1>a: {{ a }}</h1>\n    <h1>b: {{ b }}</h1>\n    <h1>c: {{ c }}</h1>\n    <h1>d: {{ d.e }}</h1>\n    <hr>\n    <button @click=\"btnEvent\">点击更新视图层某一个数据</button>\n</template>\n\n<script>\n// reactive不能用基本数据类型，ref可以\nimport { reactive, toRefs } from 'vue';\nexport default ({\n    setup() {\n        const obj = { name: '马云', age: 50, a: 1, b: 2, c: 3, d: { e: '90' } };    // 源数据\n        const rObj = reactive(obj)\n        // const res = toRefs(rObj)\n\n        function btnEvent() {\n            // console.log(res)\n        }\n        // 扩展运算符和toRefs\n        return { btnEvent, ...toRefs(rObj) }\n    },\n})\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
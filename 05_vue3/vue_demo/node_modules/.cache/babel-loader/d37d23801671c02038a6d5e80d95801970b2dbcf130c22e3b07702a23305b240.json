{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25406c00\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"back\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(\" 这是子组件 \"), _createElementVNode(\"h2\", null, \"姓名: \" + _toDisplayString($setup.res), 1 /* TEXT */), _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.btnEvent && $setup.btnEvent(...args))\n  }, \"点击改变vuex数据仓库里面的数据\")]);\n}","map":{"version":3,"mappings":";;;EAIOA,KAAK,EAAC;AAAM;gEAGfC,oBAAI;;;uBAHNC,oBAKM,OALNC,UAKM,oBALY,SAEhB,uBAAsB,YAAlB,MAAI,oBAAGC,UAAG,kBACdC,UAAI,EACJJ,oBAAoD;IAA3CK,OAAK,yCAAEF,2CAAQ;KAAE,mBAAiB","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","$setup","_hoisted_2","onClick"],"sourceRoot":"","sources":["/Users/issuser/Desktop/Project/Web/05_vue3/vue_demo/src/components/vue3-011.vue"],"sourcesContent":["<!-- 安装vuex -->\n<!-- npm install vuex@next --save -->\n\n<template>\n  <div class=\"back\">\n    这是子组件\n    <h2>姓名: {{ res }}</h2>\n    <br>\n    <button @click=\"btnEvent\">点击改变vuex数据仓库里面的数据</button>\n  </div>\n</template>\n\n<script>\n\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default ({\n  setup() {\n    // 从vuex数据仓库里面取数据\n    const store = useStore()\n    const res = computed(() => {\n      console.log('子组件computed钩子函数被调用')\n      console.log(store.state.name)\n      return store.state.name\n    })\n\n    // 点击调用vuex并且改变vuex仓库里的数据\n    function btnEvent() {\n      // 异步调用:dispatch\n      store.dispatch('sub', '雷军')\n      // 同步调用\n      // store.commit('trigger')  // 不带参的\n      // store.commit('trigger', '雷军') // 带参的，各种数据类型都可以传\n    }\n    return { res, btnEvent }\n  },\n})\n\n</script>\n\n<style scoped>\n.back {\n  background-color: blueviolet;\n  color: white;\n  padding: 20px 0;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, _toDisplayString($setup.p1), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.p1++)\n  }, \"点击p1++\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DACIA,oBAAiB,8BAAVC,SAAE,kBACTD,oBAAqC;IAA5BE,OAAK,sCAAED,SAAE;KAAI,QAAM","names":["_createElementVNode","$setup","onClick"],"sourceRoot":"","sources":["/Users/issuser/Desktop/vue-demo/src/components/vue3-012.vue"],"sourcesContent":["<template>\n    <div>{{p1}}</div>\n    <button @click=\"p1++\">点击p1++</button>\n</template>\n\n<script>\n\nimport { onBeforeMount, onMounted, onBeforeUpdate, onUpdated, \n    onBeforeUnmount, onUnmounted, onErrorCaptured, ref} from 'vue';\n\nexport default({\n    setup(){\n        console.log('setup')    // 会最先打印,写到方法后边也是一样\n        onBeforeMount(()=>{\n            console.log('onBeforeMount, 在挂载之前被调用')\n        })\n        onMounted(()=>{\n            console.log('onMounted, 在挂载时被调用')\n        })\n\n\n        onBeforeUpdate(()=>{\n            console.log('onBeforeUpdate, 数据更新时调用')\n        })\n        onUpdated(()=>{\n            console.log('onUpdated, 数据更改导致的虚拟DOM重新渲染，在这之后会调用该钩子')\n        })\n        onBeforeUnmount(()=>{\n            console.log('onBeforeUnmount, 在卸载组件实例之前调用')\n        })\n        onUnmounted(()=>{\n            console.log('onUnmounted, 卸载组件实例后调用')\n        })\n        onErrorCaptured(()=>{\n            console.log('onErrorCaptured, 当捕获一个来自子孙组件的错误时被调用')\n        })\n\n        const p1 = ref(0)\n        return {p1}\n    },\n})\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
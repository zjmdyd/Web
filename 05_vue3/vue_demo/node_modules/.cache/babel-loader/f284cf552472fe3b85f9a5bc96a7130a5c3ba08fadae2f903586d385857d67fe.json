{"ast":null,"code":"// import HelloWorld from './components/vue3-001.vue'\n// import HelloWorld from './components/vue3-002.vue'\n// import HelloWorld from './components/vue3-003.vue'\n// import HelloWorld from './components/vue3-004.vue' // toRef\n// import HelloWorld from './components/vue3-005.vue'    // toRefs\n// import HelloWorld from './components/vue3-006.vue' //computed\n// import HelloWorld from './components/vue3-007.vue'\n// import HelloWorld from './components/vue3-008.vue'\n// import HelloWorld from './components/vue3-009.vue'\n// import HelloWorld from './components/vue3-010.vue'\nimport HelloWorld from './components/vue3-011.vue'; // vuex\n// import HelloWorld from './components/vue3-012.vue'    // vue生命周期\n// import HelloWorld from './components/vue3-013.vue'\n// import HelloWorld from './components/vue3-014.vue'\nimport HelloWorld2 from './components/vue3-015.vue'; // export\n// import HelloWorld2 from './components/vue3-016.vue' // 自定义组件\n\nimport { computed, ref, onErrorCaptured, reactive } from 'vue';\nimport { useStore } from 'vuex';\nimport plbLic from './config/public';\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    HelloWorld2\n  },\n  setup() {\n    //#region \n    const p1 = reactive({\n      name: '马云',\n      age: 50\n    });\n    // provide('name', p1)   // 进入页面自动传值\n\n    const val = ref(); // ref节点，把ref节点绑定到子组件\n    function btnEvent() {\n      val.value.receive(p1); // 给子组件传值\n    }\n    //#endregion\n\n    //#region \n    // 从vuex数据仓库里面取数据\n    const store = useStore();\n    /*\n    computed是计算属性,当一个属性受一个或者多个属性影响的时候可以使用\n    当一个数据受多个数据影响时，可以使用computed\n    */\n    const res = computed(() => {\n      console.log('父组件计算属性监听store.state.name变化:' + store.state.name);\n      return store.state.name;\n    });\n    const v1 = ref(true);\n\n    // 所以要放在父组件方法中, 一般不用, 因为出错控制台直接打印出来了\n    onErrorCaptured(() => {\n      console.log('onErrorCaptured, 当捕获一个来自子孙组件的错误时被调用');\n    });\n    //#endregion\n\n    // const res_a = reactive({\n    //   name: '马云',\n    //   age: 50,\n    //   company: '阿里巴巴'\n    // })\n    const res_a = plbLic();\n    return {\n      res,\n      v1,\n      res_a,\n      btnEvent\n    };\n  }\n};","map":{"version":3,"mappings":"AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,UAAS,MAAO,2BAA0B,EAAE;AACnD;AACA;AACA;AACA,OAAOC,WAAU,MAAO,2BAA0B,EAAE;AACpD;;AAEA,SAASC,QAAQ,EAAEC,GAAG,EAAEC,eAAe,EAAEC,QAAQ,QAAO,KAAI;AAC5D,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,MAAK,MAAO,iBAAgB;AAEnC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVT,UAAU;IACVC;EACF,CAAC;EACDS,KAAK,GAAG;IACN;IACA,MAAMC,EAAC,GAAIN,QAAQ,CAAC;MAACG,IAAI,EAAE,IAAI;MAAEI,GAAG,EAAE;IAAE,CAAC;IACzC;;IAEA,MAAMC,GAAE,GAAIV,GAAG,EAAC,EAAE;IAClB,SAASW,QAAQ,GAAG;MAClBD,GAAG,CAACE,KAAK,CAACC,OAAO,CAACL,EAAE,GAAE;IACxB;IACJ;;IAEA;IACI;IACA,MAAMM,KAAI,GAAIX,QAAQ,EAAC;IACvB;;;;IAIA,MAAMY,GAAE,GAAIhB,QAAQ,CAAC,MAAI;MACrBiB,OAAO,CAACC,GAAG,CAAC,8BAA6B,GAAIH,KAAK,CAACI,KAAK,CAACb,IAAI;MAC7D,OAAOS,KAAK,CAACI,KAAK,CAACb,IAAG;IAC1B,CAAC;IAED,MAAMc,EAAC,GAAInB,GAAG,CAAC,IAAI;;IAEnB;IACAC,eAAe,CAAC,MAAI;MAChBe,OAAO,CAACC,GAAG,CAAC,qCAAqC;IACrD,CAAC;IACL;;IAEI;IACA;IACA;IACA;IACA;IACA,MAAMG,KAAI,GAAIhB,MAAM,EAAC;IACrB,OAAO;MAACW,GAAG;MAAEI,EAAE;MAAEC,KAAK;MAAET;IAAQ;EAClC;AACF","names":["HelloWorld","HelloWorld2","computed","ref","onErrorCaptured","reactive","useStore","plbLic","name","components","setup","p1","age","val","btnEvent","value","receive","store","res","console","log","state","v1","res_a"],"sourceRoot":"","sources":["/Users/issuser/Desktop/Project/Web/05_vue3/vue_demo/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"back\"> -->\n    *******这是父组件******\n    <h2>姓名:{{res}}</h2>\n    <!-- vue3-010.vue用到 -->\n    <button @click=\"btnEvent\">点击传值给子组件</button>\n  </div>\n\n  <!-- 生命周期函数demo:vue3-012有用到 -->\n  <!-- <h2 @click=\"v1 = !v1\">点击显示隐藏子组件</h2> -->\n  <!-- <HelloWorld v-if=\"v1\"/> -->\n\n  <!-- <div class=\"back\">\n    我是父组件:\n    <h2>姓名:{{res_a.name}}</h2>\n    <h2>年龄:{{res_a.age}}</h2>\n    <h2>公司:{{res_a.company}}</h2>\n  </div> -->\n  <!-- 组组件传值vue3-010.vue会用到 -->\n  <!-- <HelloWorld ref=\"\"/> --> \n  <HelloWorld />\n  <hr />\n  <HelloWorld2></HelloWorld2>\n</template>\n\n<script>\n// import HelloWorld from './components/vue3-001.vue'\n// import HelloWorld from './components/vue3-002.vue'\n// import HelloWorld from './components/vue3-003.vue'\n// import HelloWorld from './components/vue3-004.vue' // toRef\n// import HelloWorld from './components/vue3-005.vue'    // toRefs\n// import HelloWorld from './components/vue3-006.vue' //computed\n// import HelloWorld from './components/vue3-007.vue'\n// import HelloWorld from './components/vue3-008.vue'\n// import HelloWorld from './components/vue3-009.vue'\n// import HelloWorld from './components/vue3-010.vue'\nimport HelloWorld from './components/vue3-011.vue' // vuex\n// import HelloWorld from './components/vue3-012.vue'    // vue生命周期\n// import HelloWorld from './components/vue3-013.vue'\n// import HelloWorld from './components/vue3-014.vue'\nimport HelloWorld2 from './components/vue3-015.vue' // export\n// import HelloWorld2 from './components/vue3-016.vue' // 自定义组件\n\nimport { computed, ref, onErrorCaptured, reactive} from 'vue'\nimport { useStore } from 'vuex'\nimport plbLic from './config/public'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    HelloWorld2\n  },\n  setup() {\n    //#region \n    const p1 = reactive({name: '马云', age: 50})\n    // provide('name', p1)   // 进入页面自动传值\n\n    const val = ref() // ref节点，把ref节点绑定到子组件\n    function btnEvent() {\n      val.value.receive(p1) // 给子组件传值\n    }\n//#endregion\n\n//#region \n    // 从vuex数据仓库里面取数据\n    const store = useStore()\n    /*\n    computed是计算属性,当一个属性受一个或者多个属性影响的时候可以使用\n    当一个数据受多个数据影响时，可以使用computed\n    */\n    const res = computed(()=>{\n        console.log('父组件计算属性监听store.state.name变化:' + store.state.name)\n        return store.state.name\n    })\n\n    const v1 = ref(true)\n\n    // 所以要放在父组件方法中, 一般不用, 因为出错控制台直接打印出来了\n    onErrorCaptured(()=>{\n        console.log('onErrorCaptured, 当捕获一个来自子孙组件的错误时被调用')\n    })\n//#endregion\n\n    // const res_a = reactive({\n    //   name: '马云',\n    //   age: 50,\n    //   company: '阿里巴巴'\n    // })\n    const res_a = plbLic()\n    return {res, v1, res_a, btnEvent}\n  },\n}\n</script>\n\n<style>\n.back {\n  background-color: rgb(30, 90, 98);\n  padding: 20px 0;\n  border: #000 2px solid;\n  margin-bottom: 10px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Access the state directly from the store \"), _createElementVNode(\"div\", null, \"Current Count: \" + _toDisplayString($setup.counter.count), 1 /* TEXT */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DACEA,iEAAiD,EACjDC,oBAA6C,aAAxC,iBAAe,oBAAGC,cAAO,CAACC,KAAK","names":["_createCommentVNode","_createElementVNode","$setup","count"],"sourceRoot":"","sources":["/Users/issuser/Desktop/Project/Web/05_vue3/vue_demo/src/components/vue3-019.vue"],"sourcesContent":["<template>\n  <!-- Access the state directly from the store -->\n  <div>Current Count: {{ counter.count }}</div>\n</template>\n\n<script setup>\n\nimport { useCounterStore } from '@/store/counter'\n\nconst counter = useCounterStore()\ncounter.count++\n\n// with autocompletion ✨\n// counter.$patch({ count: counter.count + 1 })\ncounter.$patch({\n  count: counter.count + 1,\n  age: 100,\n  name: 'DIO',\n})\n\n// or using an action instead\n// counter.increment()\nsetInterval(() => {\n  // counter.increment()\n  counter.count++\n  // console.log(counter.doubleCount)\n  // console.log(counter.doubleCountPlusOne)\n  if(counter.count === 10) {\n    counter.$reset()  // $reset() 方法将 state 重置为初始值\n  }\n}, 1000);\n// console.log(counter.age)  // 100\n\n\ncounter.$subscribe((mutation, state)=> {\n  // console.log(mutation)\n  // console.log(state)\n})\n\n/*\n插件\n由于有了底层 API 的支持，Pinia store 现在完全支持扩展。以下是你可以扩展的内容：\n\n为 store 添加新的属性\n定义 store 时增加新的选项\n为 store 增加新的方法\n包装现有的方法\n改变甚至取消 action\n实现副作用，如本地存储\n仅应用插件于特定 store\n\n插件是通过 pinia.use() 添加到 pinia 实例的。\n最简单的例子是通过返回一个对象将一个静态属性添加到所有 store\n*/\nconsole.log(counter.secret)\n\n</script>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, watch, reactive } from 'vue';\nexport default {\n  setup() {\n    const p1 = ref(0);\n    const p2 = ref(1);\n    const p3 = reactive({\n      name: '马云',\n      age: {\n        num: 1\n      }\n    });\n    // 一:监听1个ref数据变化\n    // watch(p1, (newVal, oldVal)=> {\n    //     console.log(newVal, oldVal)\n    // })\n\n    // 二:监听多个ref的值\n    // watch([p1, p2], (newVal, oldVal)=> {\n    //     console.log(newVal, oldVal)\n    // })\n\n    // 三；监听整个reactive响应式数据的变化\n    // 只能监听到最新的结果，上一次的数据是监听不到的\n    //  watch(p3, (newVal, oldVal)=> {\n    //     console.log(newVal, oldVal)\n    // })\n\n    // 三；监听reactive响应式数据中某一个值的变化\n    // 最新的结果和上一次结果都能得到\n    // watch(()=>p3.age.num, (newVal, oldVal)=> {\n    //     console.log(newVal, oldVal)\n    // })\n    // 同上，多了最后欧一个参数,进入页面立即监听的一个参数\n    watch(() => p3.age.num, (newVal, oldVal) => {\n      console.log(newVal, oldVal);\n    }, {\n      immediate: true\n    });\n    return {\n      p1,\n      p2,\n      p3\n    };\n  }\n};","map":{"version":3,"mappings":"AAcA,SAASA,GAAE,EAAIC,KAAK,EAAEC,QAAQ,QAAO,KAAI;AAEzC,eAAe;EACXC,KAAK,GAAG;IACJ,MAAMC,EAAC,GAAIJ,GAAG,CAAC,CAAC;IAChB,MAAMK,EAAC,GAAIL,GAAG,CAAC,CAAC;IAEhB,MAAMM,EAAC,GAAIJ,QAAQ,CAAC;MAChBK,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE;QACDC,GAAG,EAAE;MACT;IACJ,CAAC;IACD;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACAR,KAAK,CAAC,MAAIK,EAAE,CAACE,GAAG,CAACC,GAAG,EAAE,CAACC,MAAM,EAAEC,MAAM,KAAI;MACrCC,OAAO,CAACC,GAAG,CAACH,MAAM,EAAEC,MAAM;IAC9B,CAAC,EAAE;MAACG,SAAS,EAAE;IAAI,CAAC;IACpB,OAAO;MAACV,EAAE;MAAEC,EAAE;MAAEC;IAAE;EACtB;AACJ,CAAC","names":["ref","watch","reactive","setup","p1","p2","p3","name","age","num","newVal","oldVal","console","log","immediate"],"sourceRoot":"","sources":["/Users/issuser/Desktop/vue-demo/src/components/vue3-007.vue"],"sourcesContent":["<template>\n    <h1>{{p1}}</h1>\n    <br>\n    <h1>{{p2}}</h1>\n    <br>\n    <h1>监听一个对象属性的变化:{{p3.age.num}}</h1>\n    <br>\n    <button @click=\"p1++\">点击p1++</button>\n    <button @click=\"p2+=2\">点击p2+2</button>\n    <button @click=\"p3.age.num++\">点击p3马云的年龄++</button>\n</template>\n\n<script>\n\nimport { ref , watch, reactive} from 'vue'\n\nexport default({\n    setup() {\n        const p1 = ref(0)\n        const p2 = ref(1)\n\n        const p3 = reactive({\n            name: '马云',\n            age: {\n                num: 1,\n            }\n        })\n        // 一:监听1个ref数据变化\n        // watch(p1, (newVal, oldVal)=> {\n        //     console.log(newVal, oldVal)\n        // })\n\n        // 二:监听多个ref的值\n        // watch([p1, p2], (newVal, oldVal)=> {\n        //     console.log(newVal, oldVal)\n        // })\n\n        // 三；监听整个reactive响应式数据的变化\n        // 只能监听到最新的结果，上一次的数据是监听不到的\n        //  watch(p3, (newVal, oldVal)=> {\n        //     console.log(newVal, oldVal)\n        // })\n\n        // 三；监听reactive响应式数据中某一个值的变化\n        // 最新的结果和上一次结果都能得到\n        // watch(()=>p3.age.num, (newVal, oldVal)=> {\n        //     console.log(newVal, oldVal)\n        // })\n        // 同上，多了最后欧一个参数,进入页面立即监听的一个参数\n        watch(()=>p3.age.num, (newVal, oldVal)=> {\n            console.log(newVal, oldVal)\n        }, {immediate: true})\n        return {p1, p2, p3}\n    },\n})\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
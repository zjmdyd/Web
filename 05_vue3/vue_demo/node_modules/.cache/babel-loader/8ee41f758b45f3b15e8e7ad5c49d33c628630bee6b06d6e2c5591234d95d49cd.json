{"ast":null,"code":"export default {\n  __name: 'vue3-018',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    /*\n    Proxy对象用于创建一个对象的代理，是用于监听一个对象的相关操作。代理对象可以监听我们对原对象的操作。\n    接下来我们将通过一个监听对象的属性操作来认识学习下什么是Proxy。\n    Proxy对象需要传入两个参数，分别是需要被Proxy代理的对象和一系列的捕获器\n    */\n    const obj = {\n      name: '_island'\n    };\n    const objProxy = new Proxy(obj, {\n      // get捕获器\n      get: function (target, key) {\n        console.log(`捕获到对象获取${key}属性的值操作`);\n        return target[key];\n      },\n      // set捕获器\n      set: function (target, key, val) {\n        console.log(`捕获到对象设置${key}属性的值操作,新值为${val}`);\n        target[key] = val;\n      }\n    });\n    console.log(objProxy);\n    // objProxy.name = \"哈哈哈\"\n    // console.log();\n    console.log(objProxy.name);\n    const __returned__ = {\n      obj,\n      objProxy\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;;;;;;IAMA;AACA;AACA;AACA;AACA;IACA,MAAMA,GAAG,GAAG;MACVC,IAAI,EAAE;IACR,CAAC;IAED,MAAMC,QAAQ,GAAG,IAAIC,KAAK,CAACH,GAAG,EAAE;MAC9B;MACAI,GAAG,EAAE,UAAUC,MAAM,EAAEC,GAAG,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAAE,UAASF,GAAI,QAAO,CAAC;QAClC,OAAOD,MAAM,CAACC,GAAG,CAAC;MACpB,CAAC;MACD;MACAG,GAAG,EAAE,UAAUJ,MAAM,EAAEC,GAAG,EAAEI,GAAG,EAAE;QAC/BH,OAAO,CAACC,GAAG,CAAE,UAASF,GAAI,aAAYI,GAAI,EAAC,CAAC;QAC5CL,MAAM,CAACC,GAAG,CAAC,GAAGI,GAAG;MACnB;IACF,CAAC,CAAC;IACFH,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrB;IACA;IACAK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACD,IAAI,CAAC","names":["obj","name","objProxy","Proxy","get","target","key","console","log","set","val"],"sources":["/Users/issuser/Desktop/Project/Web/05_vue3/vue_demo/src/components/vue3-018.vue"],"sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script setup>\n\n/*\nProxy对象用于创建一个对象的代理，是用于监听一个对象的相关操作。代理对象可以监听我们对原对象的操作。\n接下来我们将通过一个监听对象的属性操作来认识学习下什么是Proxy。\nProxy对象需要传入两个参数，分别是需要被Proxy代理的对象和一系列的捕获器\n*/\nconst obj = {\n  name: '_island'\n}\n\nconst objProxy = new Proxy(obj, {\n  // get捕获器\n  get: function (target, key) {\n    console.log(`捕获到对象获取${key}属性的值操作`);\n    return target[key];\n  },\n  // set捕获器\n  set: function (target, key, val) {\n    console.log(`捕获到对象设置${key}属性的值操作,新值为${val}`);\n    target[key] = val;\n  }\n});\nconsole.log(objProxy);\n// objProxy.name = \"哈哈哈\"\n// console.log();\nconsole.log(objProxy.name);\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}